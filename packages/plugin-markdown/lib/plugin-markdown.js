!(function (t, e) { typeof exports === 'object' && typeof module === 'object' ? module.exports = e() : typeof define === 'function' && define.amd ? define([], e) : typeof exports === 'object' ? exports.PluginMarkdown = e() : t.PluginMarkdown = e() }(global, function () { return (function (t) { var e = {}; function o (r) { if (e[r]) return e[r].exports; var n = e[r] = { i: r, l: !1, exports: {}}; return t[r].call(n.exports, n, n.exports, o), n.l = !0, n.exports } return o.m = t, o.c = e, o.d = function (t, e, r) { o.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: r }) }, o.r = function (t) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(t, '__esModule', { value: !0 }) }, o.t = function (t, e) { if (1 & e && (t = o(t)), 8 & e) return t; if (4 & e && typeof t === 'object' && t && t.__esModule) return t; var r = Object.create(null); if (o.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: t }), 2 & e && typeof t !== 'string') for (var n in t)o.d(r, n, function (e) { return t[e] }.bind(null, n)); return r }, o.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return o.d(e, 'a', e), e }, o.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, o.p = '', o(o.s = 12) }([function (t, e) { t.exports = require('markdown-it') }, function (t, e) { t.exports = require('markdown-it-emoji') }, function (t, e) { t.exports = require('markdown-it-sub') }, function (t, e) { t.exports = require('markdown-it-sup') }, function (t, e) { t.exports = require('markdown-it-footnote') }, function (t, e) { t.exports = require('markdown-it-deflist') }, function (t, e) { t.exports = require('markdown-it-abbr') }, function (t, e) { t.exports = require('markdown-it-ins') }, function (t, e) { t.exports = require('markdown-it-mark') }, function (t, e) { t.exports = require('markdown-it-toc-and-anchor') }, function (t, e) { t.exports = require('markdown-it-katex') }, function (t, e) { t.exports = require('markdown-it-task-lists') }, function (t, e, o) { 'use strict'; o.r(e); var r = o(0); var n = o.n(r); var i = o(1); var s = o.n(i); var a = o(2); var u = o.n(a); var l = o(3); var c = o.n(l); var d = o(4); var h = o.n(d); var f = o(5); var p = o.n(f); var m = o(6); var y = o.n(m); var k = o(7); var b = o.n(k); var L = o(8); var g = o.n(L); var x = o(9); var w = o.n(x); var v = o(10); var S = o.n(v); var j = o(11); var q = o.n(j); var C = { md: new n.a(), template: '<div><slot></slot></div>', data () { return { sourceData: this.source } }, props: { watches: { type: Array, default: () => ['source', 'show', 'toc'] }, source: { type: String, default: '' }, show: { type: Boolean, default: !0 }, highlight: { type: Boolean, default: !0 }, html: { type: Boolean, default: !0 }, xhtmlOut: { type: Boolean, default: !0 }, breaks: { type: Boolean, default: !0 }, linkify: { type: Boolean, default: !0 }, emoji: { type: Boolean, default: !0 }, typographer: { type: Boolean, default: !0 }, langPrefix: { type: String, default: 'language-' }, quotes: { type: String, default: '“”‘’' }, tableClass: { type: String, default: 'table' }, taskLists: { type: Boolean, default: !0 }, toc: { type: Boolean, default: !1 }, tocId: { type: String }, tocClass: { type: String, default: 'table-of-contents' }, tocFirstLevel: { type: Number, default: 2 }, tocLastLevel: { type: Number }, tocAnchorLink: { type: Boolean, default: !0 }, tocAnchorClass: { type: String, default: 'toc-anchor' }, tocAnchorLinkSymbol: { type: String, default: '#' }, tocAnchorLinkSpace: { type: Boolean, default: !0 }, tocAnchorLinkClass: { type: String, default: 'toc-anchor-link' }, anchorAttributes: { type: Object, default: () => ({}) }, prerender: { type: Function, default: t => t }, postrender: { type: Function, default: t => t }}, computed: { tocLastLevelComputed () { return this.tocLastLevel > this.tocFirstLevel ? this.tocLastLevel : this.tocFirstLevel + 1 } }, render (t) { this.md = (new n.a()).use(u.a).use(c.a).use(h.a).use(p.a).use(y.a).use(b.a).use(g.a).use(S.a, { throwOnError: !1, errorColor: ' #cc0000' }).use(q.a, { enabled: this.taskLists }), this.emoji && this.md.use(s.a), this.md.set({ html: this.html, xhtmlOut: this.xhtmlOut, breaks: this.breaks, linkify: this.linkify, typographer: this.typographer, langPrefix: this.langPrefix, quotes: this.quotes }), this.md.renderer.rules.table_open = () => `<table class="${this.tableClass}">\n`; const e = this.md.renderer.rules.link_open || function (t, e, o, r, n) { return n.renderToken(t, e, o) }; this.md.renderer.rules.link_open = (t, o, r, n, i) => (Object.keys(this.anchorAttributes).map(e => { const r = t[o].attrIndex(e); const n = this.anchorAttributes[e]; r < 0 ? t[o].attrPush([e, n]) : t[o].attrs[r][1] = n }), e(t, o, r, n, i)), this.toc && this.md.use(w.a, { tocClassName: this.tocClass, tocFirstLevel: this.tocFirstLevel, tocLastLevel: this.tocLastLevelComputed, anchorLink: this.tocAnchorLink, anchorLinkSymbol: this.tocAnchorLinkSymbol, anchorLinkSpace: this.tocAnchorLinkSpace, anchorClassName: this.tocAnchorClass, anchorLinkSymbolClassName: this.tocAnchorLinkClass, tocCallback: (t, e, o) => { o && (this.tocId && document.getElementById(this.tocId) && (document.getElementById(this.tocId).innerHTML = o), this.$emit('toc-rendered', o)) } }); let o = this.show ? this.md.render(this.prerender(this.sourceData)) : ''; return o = this.postrender(o), this.$emit('rendered', o), t('div', { domProps: { innerHTML: o }}) }, beforeMount () { if (this.$slots.default) { this.sourceData = ''; for (const t of this.$slots.default) this.sourceData += t.text } this.$watch('source', () => { this.sourceData = this.prerender(this.source), this.$forceUpdate() }), this.watches.forEach(t => { this.$watch(t, () => { this.$forceUpdate() }) }) } }; function A (t) { t.component('plugin-markdown', C) }o.d(e, 'install', function () { return A }) }])) }))
